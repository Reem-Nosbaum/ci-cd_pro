name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          tags: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Maven 3.9.2
        run: |
          MAVEN_VERSION=3.9.2
          wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
          tar -xvzf apache-maven-$MAVEN_VERSION-bin.tar.gz
          sudo mv apache-maven-$MAVEN_VERSION /opt/maven
          sudo update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 100
          mvn -v

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Determine new version
        id: version
        run: |
          BASE_VERSION="1.0"
          PATCH=0
          while true; do
            NEW_VERSION="${BASE_VERSION}.${PATCH}"
            if git tag -l | grep -q "^${NEW_VERSION}$"; then
              PATCH=$((PATCH + 1))
            else
              break
            fi
          done
          echo "New version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Tag the new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Scan Dockerfile with Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b .
          ./trivy fs --exit-code 1 --severity CRITICAL,HIGH --no-progress ./Dockerfile

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run SonarQube Scan
        if: github.ref == 'refs/heads/main'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=hello_world \
            -Dsonar.host.url=http://54.198.217.107:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ env.VERSION }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ env.VERSION }}

      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/download/v1.11.0/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign Docker image with Cosign
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          cosign sign --key cosign.key ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ env.VERSION }}

  secret_scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks to scan for secrets
        uses: zricethezav/gitleaks-action@v1.1.0
        with:
          args: "--path=./ --verbose --redact"
